// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3543.Team3543Robot.subsystems;

import org.usfirst.frc3543.Team3543Robot.RobotMap;
import org.usfirst.frc3543.Team3543Robot.commands.*;
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveLine extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon cANTalon1 = RobotMap.driveLineCANTalon1;
    private final CANTalon cANTalon2 = RobotMap.driveLineCANTalon2;
    private final CANTalon cANTalon3 = RobotMap.driveLineCANTalon3;
    private final CANTalon cANTalon4 = RobotMap.driveLineCANTalon4;
    private final RobotDrive robotDrive = RobotMap.driveLineRobotDrive;
    private final AnalogGyro analogGyro1 = RobotMap.driveLineAnalogGyro1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void tankDrive(Joystick left, Joystick right) {
    	robotDrive.tankDrive(left, right); // 
    }
    
    public void drive(double magnitude, double curve) {
    	robotDrive.drive(magnitude, curve);
    }
    
    public void drive(double speed) {
    	drive(speed, 0);
    }
    
    public void turnInPlace(double speed) {
    	tankDrive(speed, -speed);
    }
    
    public void tankDrive(double lspeed, double rspeed) {
    	robotDrive.tankDrive(lspeed, rspeed);
    }
    
    public void tankDrive(double speed) {
    	tankDrive(speed, speed);
    }
    
    
    public void arcadeDrive(Joystick stick) {
    	robotDrive.arcadeDrive(stick);
    }
    
    public void stop() {
    	robotDrive.stopMotor();
    }

	public void init() {
		robotDrive.setSafetyEnabled(false);
	}
}

